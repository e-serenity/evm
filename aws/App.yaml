AWSTemplateFormatVersion: '2010-09-09'
Description: Kyve Node Cluster

Parameters:
  VpcStackName:
    Description: |
      Name of an active CFN stack containing the Vpc where all resources will be created. Use the
      VPC.yaml template to create the Vpc stack.
    Type: String
  NodeImage:
    Type: String
    Default: "kyve/evm:latest"
  DesiredCount:
    Type: String
    Description: |
      How many node containers you want to start
    Default: "1"
  NodeName:
    Type: String
    Description: |
      The public name of your Node
    Default: "MyIncredibleKyveNode"
  PoolAddress:
    Type: String
  PrivateKey:
    Type: String
  StackAmount:
    Type: String
    Description: |
      How many $Kyve do you want to stake
    Default: "100"

Resources:

  ECSNodeTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - "EC2"
      Cpu: '512'
      Memory: '512'
      NetworkMode: awsvpc
      ExecutionRoleArn: { 'Fn::ImportValue': !Sub "${VpcStackName}-ECSTaskExecutionRole" }
      TaskRoleArn: { 'Fn::ImportValue': !Sub "${VpcStackName}-ECSTaskExecutionRole" }
      ContainerDefinitions:
        - Name: "kyve-node"
          Command:
            - !Sub "--name=${NodeName}"
            - !Sub "--pool=${PoolAddress}"
            - !Sub "--private-key=${PrivateKey}"
            - !Sub "--stake=${StackAmount}"
          Image: !Ref NodeImage
          Memory: 512
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref VpcStackName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'Kyve'

  ECSNodeService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: { 'Fn::ImportValue': !Sub "${VpcStackName}-ECSCluster" }
      TaskDefinition: !Ref ECSNodeTaskDefinition
      DesiredCount: !Ref DesiredCount
      EnableExecuteCommand: true
      DeploymentConfiguration:
        MinimumHealthyPercent: 40
        MaximumPercent: 200
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
          - { 'Fn::ImportValue': !Sub "${VpcStackName}-PrivateSubnetOne" }
          - { 'Fn::ImportValue': !Sub "${VpcStackName}-PrivateSubnetTwo" }
      CapacityProviderStrategy:
        - CapacityProvider: { 'Fn::ImportValue': !Sub "${VpcStackName}-CapacityProvider1" }
          Base: 1
          Weight: 1
        - CapacityProvider: { 'Fn::ImportValue': !Sub "${VpcStackName}-CapacityProvider2" }
          Weight: 1
